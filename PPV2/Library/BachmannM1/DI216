-- 06.02.2019 06:58:11 AR V1.0a

N = 16

block.setSize(51, N / 8 * 100 + 1)

generic = {
  name = 'DI2' .. N,
  parameter = {
    station = 1,
    slot = 4,
  },

  init = function(self)
    block.setInputsPinCount(0)
    block.setOutputsPinCount(N)
    for i = 1, N do
      block.setOutputPinTypeRestrains(i, 'boolean')
      block.setOutputPinName(i, i)
    end
    block.modifyFlags('SupressStopFunctionCall', true)
    block.modifyFlags('Realtime', true)
  end,

  open = function(self)
    local s = ''
    for i = 1, 16 do
      s = s .. i .. '\n'
    end
    gui.add('Info', 'Info', 'Bachmann M1', self.name)
    gui.add('ComboBox', 'ComboBoxSlot', 'Slot', s, {Width = 50})
    gui.set('ComboBoxSlot', 'ItemIndex', self.parameter.slot - 1)
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.slot = gui.get('ComboBoxSlot', 'ItemIndex') + 1
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar{
      Type = 0x00,
      CenterDrawSource = 'draw.setColorA(0.89, 0.58, 0.01) draw.box(1, 1, w - 2, 3) draw.text(0, 4, w, h, "' .. self.parameter.station .. '/'  .. self.parameter.slot .. '", 1)',
      FillColorSource = '0.36, 0.37, 0.42',
      PinNameColorSource = '1, 1, 1',
    }
  end,

  generate = function(self)
    if remote then
      local _, _, group = remote:find('(%w*%d)')
      if group ~= 'BachmannM1' then
        return false
      end
    end
    local source =
      [==[
        local block = {}

        block.start = function()
          block.svi = block.parent.svi or require 'svi'
        end

        block.step = function()
          local q = {}
          for i = 1, NN do
            q[#q + 1] = block.svi.readVariable('PATH' .. i)
          end
          return table.unpack(q);
        end

        return block
      ]==]
    local replaces = {
      ['NN'] = N,
      ['NAME'] = self.name,
      ['PATH'] = 'MIO/' .. self.parameter.slot .. '/',
    }
    return string.gsub(source, '%a+', replaces)
  end,

}


